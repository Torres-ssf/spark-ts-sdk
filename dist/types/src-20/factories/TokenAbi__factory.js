"use strict";
/* Autogenerated file. Do not edit manually. */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenAbi__factory = void 0;
/* tslint:disable */
/* eslint-disable */
/*
  Fuels version: 0.77.0
  Forc version: 0.51.1
  Fuel-Core version: 0.22.1
*/
const fuels_1 = require("fuels");
const _abi = {
    "types": [
        {
            "typeId": 0,
            "type": "()",
            "components": [],
            "typeParameters": null
        },
        {
            "typeId": 1,
            "type": "b256",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 2,
            "type": "enum BurnError",
            "components": [
                {
                    "name": "NotEnoughCoins",
                    "type": 0,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 3,
            "type": "enum Identity",
            "components": [
                {
                    "name": "Address",
                    "type": 7,
                    "typeArguments": null
                },
                {
                    "name": "ContractId",
                    "type": 10,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 4,
            "type": "enum Option",
            "components": [
                {
                    "name": "None",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "Some",
                    "type": 5,
                    "typeArguments": null
                }
            ],
            "typeParameters": [
                5
            ]
        },
        {
            "typeId": 5,
            "type": "generic T",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 6,
            "type": "raw untyped ptr",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 7,
            "type": "struct Address",
            "components": [
                {
                    "name": "value",
                    "type": 1,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 8,
            "type": "struct AssetId",
            "components": [
                {
                    "name": "value",
                    "type": 1,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 9,
            "type": "struct Bytes",
            "components": [
                {
                    "name": "buf",
                    "type": 11,
                    "typeArguments": null
                },
                {
                    "name": "len",
                    "type": 13,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 10,
            "type": "struct ContractId",
            "components": [
                {
                    "name": "value",
                    "type": 1,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 11,
            "type": "struct RawBytes",
            "components": [
                {
                    "name": "ptr",
                    "type": 6,
                    "typeArguments": null
                },
                {
                    "name": "cap",
                    "type": 13,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 12,
            "type": "struct String",
            "components": [
                {
                    "name": "bytes",
                    "type": 9,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 13,
            "type": "u64",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 14,
            "type": "u8",
            "components": null,
            "typeParameters": null
        }
    ],
    "functions": [
        {
            "inputs": [
                {
                    "name": "asset",
                    "type": 8,
                    "typeArguments": null
                }
            ],
            "name": "decimals",
            "output": {
                "name": "",
                "type": 4,
                "typeArguments": [
                    {
                        "name": "",
                        "type": 14,
                        "typeArguments": null
                    }
                ]
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "asset",
                    "type": 8,
                    "typeArguments": null
                }
            ],
            "name": "name",
            "output": {
                "name": "",
                "type": 4,
                "typeArguments": [
                    {
                        "name": "",
                        "type": 12,
                        "typeArguments": null
                    }
                ]
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "asset",
                    "type": 8,
                    "typeArguments": null
                }
            ],
            "name": "symbol",
            "output": {
                "name": "",
                "type": 4,
                "typeArguments": [
                    {
                        "name": "",
                        "type": 12,
                        "typeArguments": null
                    }
                ]
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read"
                    ]
                }
            ]
        },
        {
            "inputs": [],
            "name": "total_assets",
            "output": {
                "name": "",
                "type": 13,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "asset",
                    "type": 8,
                    "typeArguments": null
                }
            ],
            "name": "total_supply",
            "output": {
                "name": "",
                "type": 4,
                "typeArguments": [
                    {
                        "name": "",
                        "type": 13,
                        "typeArguments": null
                    }
                ]
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "sub_id",
                    "type": 1,
                    "typeArguments": null
                },
                {
                    "name": "amount",
                    "type": 13,
                    "typeArguments": null
                }
            ],
            "name": "burn",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "recipient",
                    "type": 3,
                    "typeArguments": null
                },
                {
                    "name": "sub_id",
                    "type": 1,
                    "typeArguments": null
                },
                {
                    "name": "amount",
                    "type": 13,
                    "typeArguments": null
                }
            ],
            "name": "mint",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        }
    ],
    "loggedTypes": [
        {
            "logId": 0,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        }
    ],
    "messagesTypes": [],
    "configurables": []
};
const _storageSlots = [
    {
        "key": "f383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ed",
        "value": "0000000000000000000000000000000000000000000000000000000000000000"
    }
];
class TokenAbi__factory {
    static createInterface() {
        return new fuels_1.Interface(_abi);
    }
    static connect(id, accountOrProvider) {
        return new fuels_1.Contract(id, _abi, accountOrProvider);
    }
    static deployContract(bytecode_1, wallet_1) {
        return __awaiter(this, arguments, void 0, function* (bytecode, wallet, options = {}) {
            const factory = new fuels_1.ContractFactory(bytecode, _abi, wallet);
            const { storageSlots } = TokenAbi__factory;
            const contract = yield factory.deployContract(Object.assign({ storageSlots }, options));
            return contract;
        });
    }
}
exports.TokenAbi__factory = TokenAbi__factory;
TokenAbi__factory.abi = _abi;
TokenAbi__factory.storageSlots = _storageSlots;
//# sourceMappingURL=TokenAbi__factory.js.map